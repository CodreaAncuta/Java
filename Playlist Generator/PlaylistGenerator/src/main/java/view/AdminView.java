
package view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListModel;

import controller.AdminController;
import model.Song;

import javax.swing.JList;

/**
 *
 * @author Ancuta
 */
public class AdminView extends javax.swing.JFrame implements IAdminView {

	/**
	 * Creates new form AdminView
	 */
	public AdminView() {
		setNimbus();
		initComponents();

		AdminController adminController = new AdminController(this);
		createSong.addActionListener(e -> adminController.createSong());
		updateSong.addActionListener(e -> adminController.updateSong());
		deleteSong.addActionListener(e -> adminController.deleteSong());
		retrieveSong.addActionListener(e -> adminController.retrieveSong());
		createUser.addActionListener(e -> adminController.createUser());
		retrieveUser.addActionListener(e -> adminController.retrieveUser());
		updateUser.addActionListener(e -> adminController.updateUser());
		deleteUser.addActionListener(e -> adminController.deleteUser());
		generateReport.addActionListener(e -> adminController.generateUserReport());
		
	}

	private void setNimbus() {
		try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
		
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setResizable(false);
		
		titleField = new javax.swing.JTextField();
		titleLabel = new javax.swing.JLabel();
		genreField = new javax.swing.JTextField();
		genreLabel = new javax.swing.JLabel();
		artistField = new javax.swing.JTextField();
		artistLabel = new javax.swing.JLabel();
		viewsField = new javax.swing.JTextField();
		viewsLabel = new javax.swing.JLabel();
		createSong = new javax.swing.JButton();
		retrieveSong = new javax.swing.JButton();
		updateSong = new javax.swing.JButton();
		deleteSong = new javax.swing.JButton();
		createUser = new javax.swing.JButton();
		retrieveUser = new javax.swing.JButton();
		idField = new javax.swing.JTextField();
		updateUser = new javax.swing.JButton();
		idLabel = new javax.swing.JLabel();
		deleteUser = new javax.swing.JButton();
		usernameField = new javax.swing.JTextField();
		usernameLabel = new javax.swing.JLabel();
		passwdField = new javax.swing.JTextField();
		passwordLabel = new javax.swing.JLabel();
		labelSongs = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		generateReport = new javax.swing.JButton();
		pdfCheckBox = new javax.swing.JCheckBox();
		txtCheckBox = new javax.swing.JCheckBox();
		idSongField = new javax.swing.JTextField();
		songIdLabel = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Administrator Page");
		setBackground(new java.awt.Color(102, 102, 255));

		titleLabel.setText("Title:");

		genreLabel.setText("Genre:");

		artistLabel.setText("Artist:");

		viewsLabel.setText("Views:");

		createSong.setText("Create");

		retrieveSong.setText("Retrieve");

		updateSong.setText("Update");

		deleteSong.setText("Delete");

		createUser.setText("Create");

		retrieveUser.setText("Retrieve");

		updateUser.setText("Update");

		idLabel.setText("User ID: ");

		deleteUser.setText("Delete");

		usernameLabel.setText("Username:");

		passwordLabel.setText("Password:");

		labelSongs.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		labelSongs.setText("SONGS");

		jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		jLabel1.setText("USERS");

		generateReport.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
		generateReport.setText("GENERATE PLAYLISTS REPORT");
		

		pdfCheckBox.setText("PDF format");

		txtCheckBox.setText("TXT format");

		songIdLabel.setText("Song ID:");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(104, 104, 104).addComponent(labelSongs)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel1).addGap(216, 216, 216))
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(titleLabel).addComponent(
												viewsLabel)
										.addComponent(genreLabel, javax.swing.GroupLayout.Alignment.TRAILING))
								.addComponent(artistLabel).addComponent(songIdLabel))
						.addGap(18, 18, 18)
						.addGroup(layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup().addGroup(layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(titleField, javax.swing.GroupLayout.DEFAULT_SIZE, 140,
												Short.MAX_VALUE)
										.addComponent(genreField, javax.swing.GroupLayout.DEFAULT_SIZE, 140,
												Short.MAX_VALUE)
										.addComponent(artistField, javax.swing.GroupLayout.DEFAULT_SIZE, 140,
												Short.MAX_VALUE)
										.addComponent(viewsField).addComponent(idSongField)).addGap(37, 37, 37)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(createSong, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(retrieveSong, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(updateSong, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(deleteSong, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65,
												Short.MAX_VALUE)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(idLabel)
												.addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(passwordLabel,
														javax.swing.GroupLayout.Alignment.TRAILING))
										.addGap(18, 18, 18)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 140,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE,
														140, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(passwdField, javax.swing.GroupLayout.PREFERRED_SIZE, 140,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(37, 37, 37)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(createUser, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(retrieveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(updateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 115,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(20, 20, 20))
								.addGroup(layout.createSequentialGroup()
										.addComponent(generateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 242,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(32, 32, 32).addComponent(pdfCheckBox).addGap(26, 26, 26)
										.addComponent(txtCheckBox)
										.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(37, 37, 37)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(labelSongs).addComponent(jLabel1))
						.addGap(9, 9, 9)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout
								.createSequentialGroup().addGroup(layout.createParallelGroup(
										javax.swing.GroupLayout.Alignment.TRAILING).addComponent(createUser,
												javax.swing.GroupLayout.PREFERRED_SIZE, 35,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(idLabel).addComponent(idField,
														javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout
												.createSequentialGroup()
												.addComponent(retrieveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(updateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(
														deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createSequentialGroup().addGroup(layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(usernameLabel)).addGap(18, 18, 18)
												.addGroup(layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(passwdField,
																javax.swing.GroupLayout.PREFERRED_SIZE, 35,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(passwordLabel))
												.addGap(21, 21, 21))))
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(titleLabel).addComponent(createSong,
														javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(genreField, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(genreLabel)
												.addComponent(retrieveSong, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(updateSong, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(artistField, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(artistLabel))
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(deleteSong, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(viewsField, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(viewsLabel))))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(idSongField, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(songIdLabel))
						.addGap(46, 46, 46)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(generateReport, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
								.addComponent(pdfCheckBox).addComponent(txtCheckBox))
						.addContainerGap()));

		pack();
	}// </editor-fold>

	// Variables declaration - do not modify
	private javax.swing.JTextField artistField;
	private javax.swing.JLabel artistLabel;
	private javax.swing.JButton createSong;
	private javax.swing.JButton createUser;
	private javax.swing.JButton deleteSong;
	private javax.swing.JButton deleteUser;
	private javax.swing.JButton generateReport;
	private javax.swing.JTextField genreField;
	private javax.swing.JLabel genreLabel;
	private javax.swing.JTextField idField;
	private javax.swing.JLabel idLabel;
	private javax.swing.JTextField idSongField;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel labelSongs;
	private javax.swing.JTextField passwdField;
	private javax.swing.JLabel passwordLabel;
	private javax.swing.JCheckBox pdfCheckBox;
	private javax.swing.JButton retrieveSong;
	private javax.swing.JButton retrieveUser;
	private javax.swing.JLabel songIdLabel;
	private javax.swing.JTextField titleField;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JCheckBox txtCheckBox;
	private javax.swing.JButton updateSong;
	private javax.swing.JButton updateUser;
	private javax.swing.JTextField usernameField;
	private javax.swing.JLabel usernameLabel;
	private javax.swing.JTextField viewsField;
	private javax.swing.JLabel viewsLabel;
	// End of variables declaration

	@Override
	public String getSongTitle() {
		return titleField.getText();
	}

	@Override
	public String getSongGenre() {
		return genreField.getText();
	}

	@Override
	public String getSongArtist() {
		return artistField.getText();
	}

	@Override
	public Integer getSongViews() {
		return Integer.parseInt(viewsField.getText());
	}

	@Override
	public Integer getUserId() {
		return Integer.parseInt(idField.getText());
	}

	@Override
	public String getUsername() {
		return usernameField.getText();
	}

	@Override
	public String getPassword() {
		return passwdField.getText();
	}

	@Override
	public void showErrorMessage(String message) {
		JOptionPane.showMessageDialog(this, message);
	}

	@Override
	public void showSuccessMessage(String message) {
		JOptionPane.showMessageDialog(this, message);

	}

	@Override
	public Integer getSongId() {
		return Integer.parseInt(idSongField.getText());
	}

	@Override
	public void createJTable(Object rowData[][], Object columnNames[]) {
		JFrame frame = new JFrame();
	    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

	    JTable table = new JTable(rowData, columnNames);

	    JScrollPane scrollPane = new JScrollPane(table);
	    frame.add(scrollPane, BorderLayout.CENTER);
	    frame.setSize(300, 150);
	    frame.setVisible(true);

		
	}

	@Override
	public void setSongTitle(String title) {
		this.titleField.setText(title);
	}

	@Override
	public void setSongGenre(String genre) {
		this.genreField.setText(genre);
		
	}

	@Override
	public void setSongArtist(String artist) {
		this.artistField.setText(artist);
		
	}

	@Override
	public void setSongViews(Integer views) {
		this.viewsField.setText(String.valueOf(views));
		
	}

	@Override
	public void setSongId(Integer id) {
		this.idSongField.setText(String.valueOf(id));
		
	}

	@Override
	public void setUsername(String username) {
		this.usernameField.setText(username);
		
	}

	@Override
	public void setPassword(String password) {
		this.passwdField.setText(password);
	}

	@Override
	public void setUserId(Integer id) {
		this.idField.setText(String.valueOf(id));
		
	}

	@Override
	public boolean getPdfChecked() {
		return pdfCheckBox.isSelected();
	}

	@Override
	public boolean getTxtChecked() {
		return txtCheckBox.isSelected();
	}

}
